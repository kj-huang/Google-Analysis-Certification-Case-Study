1+1
clear
1+1
1+
1+1
1+1
v1  <- c(1, 2, 3, 4)
(v1  <- c(1, 2, 3, 4))
?sum
v1  <- c(1, 2, 3, 4)
v1
()
(v1)
(v1  <- c(1, 2, 3, 4))
(v2  <- c("?°å?å¸?, "?°å?å¸?, "?ºé?å¸?))
(v3 <- c(TRUE, FALSE, TRUE))
(c(v1, v2, v3))
(v1  <- c(1, 2, 3, 4))
(v2  <- c("?°å?å¸?, "?°å?å¸?, "?ºé?å¸?))
(v3 <- c(TRUE, FALSE, TRUE))
(c(v1, v2, v3))
(v1  <- c(1, 2, 3, 4))
(v2  <- c("?°å?å¸?, "?°å?å¸?, "?ºé?å¸?))
(v3 <- c(TRUE, FALSE, TRUE))
(c(class(v1), class(v2), class(v3)))
(v1  <- c(1, 2, 3, 4))
(v2  <- c("?°å?å¸?, "?°å?å¸?, "?ºé?å¸?))
(v3 <- c(TRUE, FALSE, TRUE))
(c(class(v1), class(v2), class(v3)))
(c(1, 2, 3) + c(1, 2, 3))
(1 + c(1, 2, 3))
(c(1, 2) + c(1, 2, 3))
(c(1, 2) + c(1, 2, 3, 4))
(c(1, 2, "YA"))
(c(1, 2, TRUE))
(c("1", 2, TRUE))
(c(1, 2, "YA"))
(c(1, 2, TRUE))
(c("1", 2, TRUE))
as.numeric(c(1, 2, "YA"))
as.numeric(c(1, 2, "YA"))
(seq(1, 9, by = 2))
(req(1:3, each = 2))
(seq(1, 9, by = 2))
(rep(1:3, each = 2))
(seq(1, 9, by = 2))
(rep(1:3, each = 2))
(rep(seq(1, 4)))
?rep
seq(0, 1, length.out = 11)
seq(1, 9, by = 2)
(rep(seq(1, 4), each = seq(1, 4, by = 1)))
(rep(seq(1, 4),  seq(1, 4, by = 1)))
install.packages("tidyverse")
library(ggplot2)
data("diamonds")
View(diamonds)
library(tidyverse)
mutate(diamonds, carat_2=carat*100)
install.packages("here")
install.packages("skimr")
install.packages("janitor")
library("skimr")
library("janitor")
library("janitor")
library("dplyr")
library("here")
install.packages("plamerpenguins")
library("plamerpenguins")
install.packages("palmerpenguins")
library("pamlerpenguins")
library("palmerpenguins")
skim_without_charts(penguins)
glimpse(penguins)
penguins %>%
select(species)
penguins %>% arrange(bill_length_mm)
library(tidyverse)
library(lubridate)
library(ggplot2)
getwd()
setwd("C:\Users\Kevin\Desktop\homework\CaseStudy1")
setwd("C:\\Users\\Kevin\\Desktop\\homework\\CaseStudy1")
#=====================
# STEP 1: COLLECT DATA
#=====================
# Upload Divvy datasets (xlsx files) here
q1q2_2014 <- read_csv("Divvy_Stations_2014-Q1Q2.xlsx")
q3q4_2014 <- read_csv("Divvy_Stations_2014-Q3Q4.xlsx")
#=====================
# STEP 1: COLLECT DATA
#=====================
# Upload Divvy datasets (xlsx or csv files) here
q1q2_2014 <- read_csv("Divvy_Stations_2014-Q1Q2.csv")
q3q4_2014 <- read_csv("Divvy_Stations_2014-Q3Q4.csv")
View(q1q2_2014)
View(q3q4_2014)
#=====================
# STEP 1: COLLECT DATA
#=====================
# Upload Divvy datasets (xlsx or csv files) here
q1q2_2014 <- read_csv("Divvy_Stations_2014-Q1Q2.csv")
#=====================
# STEP 1: COLLECT DATA
#=====================
# Upload Divvy datasets (xlsx or csv files) here
q1q2_2014 <- read_csv("Divvy_Stations_2014-Q1Q2.csv")
#=====================
# STEP 1: COLLECT DATA
#=====================
# Upload Divvy datasets (xlsx or csv files) here
q1q2_2014 <- read_csv("Divvy_Stations_2014-Q1Q2.csv")
#====================================================
# STEP 2: WRANGLE DATA AND COMBINE INTO A SINGLE FILE
#====================================================
# Compare column names each of the files
# While the names don't have to be in the same order, they DO need to match perfectly before we can use a command to join them into one file
colnames(q3_2019)
q3q4_2014 <- read_csv("Divvy_Stations_2014-Q3Q4.csv")
View(q1q2_2014)
View(q3q4_2014)
#====================================================
# STEP 2: WRANGLE DATA AND COMBINE INTO A SINGLE FILE
#====================================================
# Compare column names each of the files
# While the names don't have to be in the same order, they DO need to match perfectly before we can use a command to join them into one file
colnames(q1q2_2014)
colnames(q3q4_2014)
q3q4_2014 <- rename(q3q4_2014
,dateCreated = "online date")
q3q4_2014 <- rename(q3q4_2014
,"dateCreated" = "online date")
q3q4_2014 <- rename(q3q4_2014
,"online date" = "dateCreated")
# Inspect the dataframes and look for incongruencies
str(q1q2_2014)
# Convert ride_id and rideable_type to character so that they can stack correctly
q4_2019 <-  mutate(q4_2019, ride_id = as.character(ride_id)
,rideable_type = as.character(rideable_type))
str(q3q4_2014)
# Inspect the dataframes and look for incongruencies
str(q1q2_2014)
library(tidyverse)
setwd("C:\\Users\\Kevin\\Desktop\\homework\\CaseStudy2")
daily_activity <- read.csv("dailyActivity_merged.csv")
sleep_day <- read.csv("sleepDay_merged.csv")
View(daily_activity)
View(sleep_day)
View(sleep_day)
n_distinct(daily_activity$Id)
n_distinct(sleep_day$Id)
nrow(daily_activity)
nrow(sleep_day)
daily_activity %>%
select(TotalSteps,
TotalDistance,
ModeratelyActiveDistance,
SedentaryMinutes) %>%
summary()
sleep_day %>%
select(TotalSleepRecords,
TotalMinutesAsleep,
TotalTimeInBed) %>%
summary()
ggplot(data=daily_activity, aes(x=TotalSteps, y=ModeratelyActiveDistance)) + geom_point()
q()
